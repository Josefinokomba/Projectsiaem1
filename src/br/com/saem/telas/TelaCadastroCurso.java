/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package br.com.saem.telas;

import br.com.saem.dal.ModuloConexao;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Josefino Komba
 */
public class TelaCadastroCurso extends javax.swing.JInternalFrame {

    int IdArea;
    DefaultTableModel tbModel;

    /**
     * Creates new form TelaCadastroCurso
     */
    public TelaCadastroCurso() {
        initComponents();
        CarregarComboArea();
        tbModel = new DefaultTableModel();
        CarregarTable(tbModel, tblConsultarCurso);
    }

    private void CarregarComboArea() {

        Connection conex = ModuloConexao.Conector();

        String sql = String.format("SELECT*FROM areaCurso");
        try ( Statement stmt = conex.createStatement()) {
            stmt.execute(sql);
            try ( ResultSet rs = stmt.executeQuery(sql)) {
                cmbAreaCurso.removeAllItems();
                while (rs.next()) {
                    IdArea = rs.getInt("IdArea");
                    cmbAreaCurso.addItem(rs.getString("NomeArea"));
                }
            }

        } catch (SQLException ex) {
            ex.printStackTrace();

        }

    }

    public void CarregarTable(DefaultTableModel tbModelF, JTable tblFuncionario) {
        Connection conex = ModuloConexao.Conector();
        Object[] lista = new Object[2];
        Object[] columnNames = {"curso", "area"};

        tbModelF.setColumnIdentifiers(columnNames);

        String sql = String.format("SELECT NomeCurso,NomeArea FROM curso, areaCurso WHERE curso.IdArea = areaCurso.IdArea");
        try ( Statement stmt = conex.createStatement()) {
            stmt.execute(sql);
            try ( ResultSet rs = stmt.executeQuery(sql)) {
                while (rs.next()) {
                    lista[0] = (rs.getString("NomeCurso"));
                    lista[1] = (rs.getString("NomeArea"));
                    tbModelF.addRow(lista);
                }
                tblFuncionario.setModel(tbModelF);
            }

        } catch (SQLException ex) {
            ex.printStackTrace();

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCriarCurso = new javax.swing.JTextField();
        btnCriarCurso = new javax.swing.JButton();
        btnAlterarCurso = new javax.swing.JButton();
        btnApagarCurso = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsultarCurso = new javax.swing.JTable();
        cmbAreaCurso = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setPreferredSize(new java.awt.Dimension(709, 722));

        jLabel1.setText("Criar Cursos");

        btnCriarCurso.setText("Adicionar");
        btnCriarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarCursoActionPerformed(evt);
            }
        });

        btnAlterarCurso.setText("Alterar");

        btnApagarCurso.setText("Apagar");

        tblConsultarCurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblConsultarCurso);

        cmbAreaCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(cmbAreaCurso, 0, 568, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnCriarCurso)
                                        .addGap(73, 73, 73)
                                        .addComponent(btnAlterarCurso)
                                        .addGap(97, 97, 97)
                                        .addComponent(btnApagarCurso))
                                    .addComponent(txtCriarCurso))))))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(cmbAreaCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCriarCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCriarCurso)
                    .addComponent(btnAlterarCurso)
                    .addComponent(btnApagarCurso))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(87, 87, 87))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCriarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarCursoActionPerformed
        // TODO add your handling code here:
        Connection conex = ModuloConexao.Conector();
        String sql = "select IdArea from areaCurso WHERE NomeArea = ?";

        // as linhas a baixo preparam a consulta a BD em função do que foi digitado nas caixas e texto
        //O ? interroga é substituido pelo conteúdo das váriaveis
        try {
            PreparedStatement pst = null;

        pst = conex.prepareStatement(sql);

        pst.setString(1, cmbAreaCurso.getSelectedItem().toString());

        //a linha abaixo executa a query(consulta)
        ResultSet rs = pst.executeQuery();
        rs.next();
        IdArea = rs.getInt("IdArea");
        } catch (Exception e) {
        }
        
        //se existir um usuário e senha correspondente

        try ( PreparedStatement stmt = conex.prepareStatement("INSERT INTO curso(NomeCurso, IdArea) "
                + "VALUES (?,?) ")) {
            stmt.setString(1, txtCriarCurso.getText());
            stmt.setInt(2, IdArea);
            stmt.execute();
            JOptionPane.showMessageDialog(null, "Cadastrado com sucesso");
            System.out.println("Cad sucesso");
            txtCriarCurso.setText(" ");
            tbModel = new DefaultTableModel();
            CarregarTable(tbModel, tblConsultarCurso);
          

        } catch (SQLException ex) {

            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnCriarCursoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarCurso;
    private javax.swing.JButton btnApagarCurso;
    private javax.swing.JButton btnCriarCurso;
    private javax.swing.JComboBox<String> cmbAreaCurso;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblConsultarCurso;
    private javax.swing.JTextField txtCriarCurso;
    // End of variables declaration//GEN-END:variables
}
